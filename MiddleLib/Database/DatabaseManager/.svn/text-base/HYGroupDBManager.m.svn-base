//
//  HYGroupDBManager.m
//  iRCS
//
//  Created by 王斌 on 15/8/28.
//  Copyright (c) 2015年 frank weng. All rights reserved.
//

#import "HYGroupDBManager.h"
#import "HYDatabaseHelper.h"

@interface HYGroupDBManager()

@property (nonatomic, strong) HYDatabaseHelper *dbHelper;

@end

@implementation HYGroupDBManager

SINGLETON_GENERATOR(HYGroupDBManager, defaultManager)

- (id)init
{
    self = [super init];
    return self;
}

- (void)setup
{
    self.dbHelper = [HYDatabaseHelper defaultHelper];
    self.database = self.dbHelper.database;
    self.databaseQueue = self.dbHelper.databaseQueue;
}

#pragma mark 增
- (BOOL)createTable
{
    NSDictionary *param = @{@"groupID": @"text primary key",
                                      @"groupName": @"text",
                                      @"groupSubject": @"text",
                                      @"groupDescription": @"text",
                                      @"policy": @"int",
                                      @"maxMemberCount": @"int",
                                      @"memberCount": @"int",
                                      @"groupMaster": @"text",
                                      @"members": @"text",
                                      @"createTimeStamp": @"integer",
                                      @"isQuit": @"bool",
                                      @"WeatherAcceptMessageNotification": @"text"};
    return [self.dbHelper creatTableWithTable:GROUP_TABLE Param:param];
}

- (BOOL)addGroupInDBWithModel:(GroupDBModel *)groupModel
{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        if (groupModel) {
            NSString *sql = [NSString stringWithFormat:@"insert into %@ (groupID,groupName,groupSubject,groupDescription,policy,maxMemberCount,memberCount,groupMaster,members,createTimeStamp,isQuit,WeatherAcceptMessageNotification) values('%@','%@','%@','%@','%u','%ld','%ld','%@','%@','%ld','%d','%@')",GROUP_TABLE,groupModel.groupID,groupModel.groupName,groupModel.groupSubject,groupModel.groupDescription,groupModel.policy,(long)groupModel.maxMemberCount,(long)groupModel.memberCount,groupModel.groupMaster,groupModel.members,(long)groupModel.createTimeStamp,groupModel.isQuit,groupModel.WeatherAcceptMessageNotification];
            rst = [db executeUpdate:sql];
        }
        
    }];
    return rst;
}

#pragma mark 查
- (BOOL)isGroupExistWithGroupID:(NSString *)groupID{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"select * from %@ where groupID = '%@'", GROUP_TABLE, groupID];
        HYFMResultSet * rs = [db executeQuery:sql];
        if([rs next]) {
            rst = YES;
        }
        [rs close];
    }];
    return rst;
}

- (NSMutableArray *)getAllGroupInDB
{
    __block NSMutableArray *models = nil;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"select rowid,* from %@ order by rowid desc",GROUP_TABLE];
        HYFMResultSet * rs = [db executeQuery:sql];
        while([rs next]) {
            if (!models) {
                models = [[NSMutableArray alloc] init];
            }
            GroupDBModel *group = [[GroupDBModel alloc]init];
            group.groupID          = [rs stringForColumn:@"groupID"];
            group.groupName        = [rs stringForColumn:@"groupName"];
            group.groupSubject     = [rs stringForColumn:@"groupSubject"];
            group.groupDescription = [rs stringForColumn:@"groupDescription"];
            group.policy           = [rs intForColumn:@"policy"];
            group.maxMemberCount   = [rs intForColumn:@"maxMemberCount"];
            group.memberCount      = [rs intForColumn:@"memberCount"];
            group.createTimeStamp  = [rs longLongIntForColumn:@"createTimeStamp"];
            group.groupMaster      = [rs stringForColumn:@"groupMaster"];
            group.members          = [rs stringForColumn:@"members"];
            group.isQuit           = [rs boolForColumn:@"isQuit"];
            group.WeatherAcceptMessageNotification = [rs stringForColumn:@"WeatherAcceptMessageNotification"];
            
            [models safeAddObject:group];
        }
        [rs close];
    }];
    return models;
}

- (GroupDBModel *)getGroupInDBWithGroupID:(NSString *)groupID
{
    __block GroupDBModel *group = nil;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"select * from %@ where groupID = '%@'",GROUP_TABLE,groupID];
        HYFMResultSet * rs = [db executeQuery:sql];
        if([rs next]) {
            group = [[GroupDBModel alloc]init];
            group.groupID          = groupID;
            group.groupName        = [rs stringForColumn:@"groupName"];
            group.groupSubject     = [rs stringForColumn:@"groupSubject"];
            group.groupDescription = [rs stringForColumn:@"groupDescription"];
            group.policy           = [rs intForColumn:@"policy"];
            group.maxMemberCount   = [rs intForColumn:@"maxMemberCount"];
            group.memberCount      = [rs intForColumn:@"memberCount"];
            group.createTimeStamp  = [rs longLongIntForColumn:@"createTimeStamp"];
            group.groupMaster      = [rs stringForColumn:@"groupMaster"];
            group.members          = [rs stringForColumn:@"members"];
            group.isQuit           = [rs boolForColumn:@"isQuit"];
            group.WeatherAcceptMessageNotification = [rs stringForColumn:@"WeatherAcceptMessageNotification"];
        }
        [rs close];
    }];
    return group;
}

//- (NSString *)getGroupMemberIDInDBWithGroupID:(NSString *)groupID
//{
//    __block NSString *groupMemberID = nil;
//    [self.databaseQueue inDatabase:^(FMDatabase *db) {
//        NSString *sql = [NSString stringWithFormat:@"select members from %@ where groupID = '%@'",GROUP_TABLE,groupID];
//        FMResultSet * rs = [db executeQuery:sql];
//        if([rs next]) {
//            groupMemberID = [rs stringForColumnIndex:0];
//        }
//        [rs close];
//    }];
//    return groupMemberID;
//}

#pragma mark - 改
- (BOOL)updateGroupInDB:(GroupDBModel *)group
{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"UPDATE %@  SET groupName = '%@', groupSubject = '%@', groupDescription = '%@', memberCount = '%ld',groupMaster = '%@', members = '%@', isQuit = '%d' WHERE groupID = '%@'",GROUP_TABLE,group.groupName,group.groupSubject,group.groupDescription,group.memberCount,group.groupMaster,group.members,group.isQuit,group.groupID];
        rst = [db executeUpdate:sql];
    }];
    return rst;
}

- (BOOL) updateGroupNameWithGroupID:(NSString *)groupID NewGroupName:(NSString *)groupName
{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"UPDATE %@  SET groupName = '%@' WHERE groupID = '%@'",GROUP_TABLE,groupName,groupID];
        rst = [db executeUpdate:sql];
    }];
    return rst;
}

- (BOOL)updateGroupMaster:(NSString *)newMasterID GroupID:(NSString *)groupID{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"UPDATE %@  SET groupMaster = '%@' WHERE groupID = '%@'",GROUP_TABLE,newMasterID,groupID];
        rst = [db executeUpdate:sql];
    }];
    return rst;
}

- (BOOL)updateGroupIsQuit:(BOOL)isQuit GroupID:(NSString *)groupID{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        NSString *sql = [NSString stringWithFormat:@"UPDATE %@  SET isQuit = '%d' WHERE groupID = '%@'",GROUP_TABLE, isQuit, groupID];
        rst = [db executeUpdate:sql];
    }];
    return rst;
}


#pragma mark 删
- (BOOL)deleteGroupInDBWithGroupID:(NSString *)groupID
{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        if (groupID) {
            NSString *sql = [NSString stringWithFormat:@"delete from %@ where groupID = '%@'",GROUP_TABLE,groupID];
            rst = [db executeUpdate:sql];
        }
        
    }];
    return rst;
}

- (BOOL)deleteGroupMemberInDBWhereGroupID:(NSString *) groupID{
    __block BOOL rst = NO;
    [self.databaseQueue inDatabase:^(HYFMDatabase *db) {
        if (groupID) {
            NSString *sql = [NSString stringWithFormat:@"delete from %@ where groupID = '%@'",GROUPMEMBER_TABLE,groupID];
            rst = [db executeUpdate:sql];
        }
        
    }];
    return rst;
}


@end
